name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg PORT=${{ secrets.PORT }} \
            --build-arg DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
            --build-arg DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
            --build-arg DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            --build-arg DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
            --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --build-arg S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} \
            --build-arg S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }} \
            -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      - name: SSH into EC2 instance and restart Docker container
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          port: 22
          script: |
            if [ $(sudo docker ps -aq -f name=^${{ secrets.DOCKER_REPO }}$) ]; then
              sudo docker stop ${{ secrets.DOCKER_REPO }}
              sudo docker rm ${{ secrets.DOCKER_REPO }}
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            sudo docker run -d --name ${{ secrets.DOCKER_REPO }} -p 3000:3000 --env-file .env ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            sudo docker system prune -a -f
